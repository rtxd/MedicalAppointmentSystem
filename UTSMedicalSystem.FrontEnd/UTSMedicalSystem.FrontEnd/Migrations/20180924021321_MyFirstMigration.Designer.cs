// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using UTSMedicalSystem.FrontEnd.Data;

namespace UTSMedicalSystem.FrontEnd.Migrations
{
    [DbContext(typeof(MedicalSystemContext))]
    [Migration("20180924021321_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UTSMedicalSystem.FrontEnd.Models.Appointment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DoctorID");

                    b.Property<string>("Location");

                    b.Property<string>("Notes");

                    b.Property<int>("PatientID");

                    b.Property<DateTime>("Time");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("PatientID");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("UTSMedicalSystem.FrontEnd.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DOB");

                    b.Property<string>("FirstName");

                    b.Property<string>("History");

                    b.Property<bool>("IsDoctor");

                    b.Property<bool>("IsPatient");

                    b.Property<bool>("IsReceptionist");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("UTSID");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UTSMedicalSystem.FrontEnd.Models.Appointment", b =>
                {
                    b.HasOne("UTSMedicalSystem.FrontEnd.Models.User", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
